syntax = "proto3";
package rpc;

import "google/protobuf/any.proto";

option go_package = "gitdc.ee.guardtime.com/alphabill/alphabill/internal/rpc/transaction;transaction";

// TransactionOrder is a generic transaction order, same for all transaction systems.
message Transaction {
  bytes unit_id = 1;
  google.protobuf.Any transaction_attributes = 2;
  uint64 timeout = 3;
  bytes owner_proof = 4;
}

message TransactionResponse {
  // True if request passed initial validation.
  bool ok = 1;
  // Contains error message if ok is false.
  string message = 2;
}

service Transactions {
  rpc ProcessTransaction(Transaction) returns (TransactionResponse) {};
}

// Alphabill specific transaction attributes.
message BillTransfer {
  bytes new_bearer = 1;
  uint64 target_value = 2;
  bytes backlink = 3;
}

message TransferDC {
  bytes nonce = 1;
  bytes target_bearer = 2;
  uint64 target_value = 3;
  bytes backlink = 4;
}

message BillSplit {
  uint64 amount = 1;
  bytes target_bearer = 2;
  uint64 remaining_value = 3;
  bytes backlink = 4;
}

message Swap {
  bytes owner_condition = 1;
  repeated bytes bill_identifiers = 2;
  repeated Transaction dc_transfers = 3;
  repeated bytes proofs = 4;
  uint64 target_value = 5;
}
