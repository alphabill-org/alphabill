syntax = "proto3";
package rpc;

import "transaction.proto";
import "block_proof.proto";

option go_package = "github.com/alphabill-org/alphabill/internal/txsystem/money/;money";

message TransferOrder {
  bytes new_bearer = 1;
  uint64 target_value = 2;
  bytes backlink = 3;
}

message TransferDCOrder {
  bytes nonce = 1;
  bytes target_bearer = 2;
  uint64 target_value = 3;
  bytes backlink = 4;
}

message SplitOrder {
  uint64 amount = 1;
  bytes target_bearer = 2;
  uint64 remaining_value = 3;
  bytes backlink = 4;
}

message SwapOrder {
  bytes owner_condition = 1;
  repeated bytes bill_identifiers = 2;
  repeated Transaction dc_transfers = 3;
  repeated BlockProof proofs = 4;
  uint64 target_value = 5;
}

message TransferFCOrder {
  // amount to transfer
  uint64 amount = 1;
  // system_identifier of the target partition
  bytes target_system_identifier = 2;
  // unit id of the corresponding “add fee credit” transaction
  bytes target_record_id = 3;
  // earliest round when the corresponding “add fee credit” transaction can be executed in the target system
  uint64 earliest_addition_time = 4;
  // latest round when the corresponding “add fee credit” transaction can be executed in the target system
  uint64 latest_addition_time = 5;
  // the current state hash of the target credit record if the record exists, or to nil if the record does not exist yet
  bytes nonce = 6;
  // hash of this unit's previous transacton
  bytes backlink = 7;
}


