syntax = "proto3";

option go_package = "github.com/alphabill-org/alphabill/internal/certificates;certificates";

message UnicityCertificate {
  InputRecord input_record = 1;
  UnicityTreeCertificate unicity_tree_certificate = 2;
  UnicitySeal unicity_seal = 3;
}

message InputRecord {
  // previously certified state hash
  bytes previous_hash = 1;
  // state hash to be certified
  bytes hash = 2;
  // hash of the block
  bytes block_hash = 3;
  // summary value to certified
  bytes summary_value = 4;
  // transaction system's round number
  uint64 round_number = 5;
  // sum of the actual fees over all transaction records in the block
  uint64 sum_of_earned_fees = 6;
}

message UnicityTreeCertificate {
  bytes system_identifier = 1;
  repeated bytes sibling_hashes = 2;
  bytes system_description_hash = 3;
}

// Yellowpaper refers this structure as "vote_info".
message RootRoundInfo {
  // root chain round number
  uint64 round_number = 1;
  // root chain epoch
  uint64 epoch = 2;
  // timestamp
  uint64 timestamp = 3;
  // round number of the previous round
  uint64 parent_round_number = 4;
  // latest state hash (only used by root chain)
  // Yellowpaper refers to it as "exec_state_id" - state hash after executing all tx-s in payload
  bytes current_root_hash = 5;
}

message CommitInfo {
  // hash of message RootRoundInfo
  bytes root_round_info_hash = 1;
  // committed root hash
  bytes root_hash = 2;
}

message UnicitySeal {
  // UnicitySeal version?
  uint64 version = 1;
  // Commit info context
  RootRoundInfo root_round_info = 2;
  // Committed state
  CommitInfo commit_info = 3;
  // Commit info signed by quorum of root validators
  map<string, bytes> signatures = 4;
}


