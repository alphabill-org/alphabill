// Code generated by tygo. DO NOT EDIT.

//////////
// source: attributes.go

export const PayloadTypeTransfer = "trans";
export const PayloadTypeSplit = "split";
export const PayloadTypeTransDC = "transDC";
export const PayloadTypeSwapDC = "swapDC";
export const PayloadTypeLock = "lock";
export const PayloadTypeUnlock = "unlock";
export interface TransferAttributes {
  NewBearer: string;
  TargetValue: number /* uint64 */;
  Backlink: string;
}
export interface TransferDCAttributes {
  Value: number /* uint64 */;
  TargetUnitID: string;
  TargetUnitBacklink: string;
  Backlink: string;
}
export interface SplitAttributes {
  TargetUnits: (TargetUnit | undefined)[];
  RemainingValue: number /* uint64 */;
  Backlink: string;
}
export interface TargetUnit {
  Amount: number /* uint64 */;
  OwnerCondition: string;
}
export interface SwapDCAttributes {
  OwnerCondition: string;
  DcTransfers: (any /* types.TransactionRecord */ | undefined)[];
  DcTransferProofs: (any /* types.TxProof */ | undefined)[];
  TargetValue: number /* uint64 */; // value added to target bill
}
export interface LockAttributes {
  LockStatus: number /* uint64 */; // status of the lock, non-zero value means locked
  Backlink: string;
}
export interface UnlockAttributes {
  Backlink: string;
}

//////////
// source: bill.go

export interface BillData {
  V: number /* uint64 */; // The monetary value of this bill
  T: number /* uint64 */; // The round number of the last transaction with the bill
  Backlink: string; // Backlink (256-bit hash)
  Locked: number /* uint64 */; // locked status of the bill, non-zero value means locked
}

//////////
// source: dust_collector.go

export interface DustCollector {
}

//////////
// source: fee_credit_tx_recorder.go

/**
 * feeCreditTxRecorder container struct for recording fee credit transactions
 */

//////////
// source: money_module.go

export interface Module {
}

//////////
// source: money_tx_system_opts.go

export interface Options {
}
export type Option = any;

//////////
// source: tx_executor_swap_dc.go


//////////
// source: unit_types.go

export const UnitIDLength = UnitPartLength + TypePartLength;
export const UnitPartLength = 32;
export const TypePartLength = 1;
