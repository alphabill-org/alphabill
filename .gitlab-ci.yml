stages:
  - init
  - test
  - analyze

image: $CI_REGISTRY_IMAGE/ab-gitlab-runner:20211112

# Debugging info and initialization goes here
init:
  stage: init
  script: go env

test:
  stage: test
  script:
    - make test
    - gocover-cobertura < test-coverage.out > test-coverage-cobertura.xml
  artifacts:
    reports:
      cobertura: test-coverage-cobertura.xml
    paths:
      - test-coverage.out
    when: always

gosec:
  stage: test
  script:
    - make gosec
  artifacts:
    paths:
      - gosec_report.json

sonarqube-check:
  stage: analyze
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [ "" ]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: >
      sonar-scanner
  allow_failure: true

trivy:
  stage: analyze
  script:
    # build report
    - trivy --cache-dir .trivycache/ fs --exit-code 0 --no-progress --format template --template "@/html.tpl" -o trivy-report.html .
    # print report
    - trivy --cache-dir .trivycache/ fs --exit-code 1 --no-progress --severity "HIGH,CRITICAL" .
  cache:
    paths:
      - .trivycache/
  artifacts:
    paths:
      - trivy-report.html
    when: always

nancy:
  stage: analyze
  script:
    - go list -json -m all | nancy sleuth
